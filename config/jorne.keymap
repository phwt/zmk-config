/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define TYP 1
#define FNC 2
#define ADJ 3

#define BRID C_BRI_DN
#define BRIU C_BRI_UP

/ {
        macros {
            ZMK_MACRO(mlock,
                wait-ms = <10>;
                tap-ms = <10>;
                bindings = 
                    <&macro_press &kp LGUI &kp LCTRL>,
                    <&macro_tap &kp Q>,
                    <&macro_release &kp LGUI &kp LCTRL>;
            )
            ZMK_MACRO(marr, // Arrow function
                wait-ms = <10>;
                tap-ms = <10>;
                bindings = <&kp SPACE &kp EQUAL &kp GT &kp SPACE>;
            )
            ZMK_MACRO(mvbh, // Vim blackhole register
                wait-ms = <10>;
                tap-ms = <10>;
                bindings = <&kp SQT &kp UNDER>;
            )
        };

        combos {
            compatible = "zmk,combos";
            combo_lang { // Trigger LALT+SPACE on SPACE+LALT 
                timeout-ms = <150>;
                key-positions = <39 40>;
                bindings = <&kp LA(SPACE)>;
            };
            combo_term { // LALT+GRAVE to trigger terminal (LCTRL+GRAVE)
                timeout-ms = <150>;
                key-positions = <0 40>;
                bindings = <&kp LC(GRAVE)>;
            };
            combo_adj {
                timeout-ms = <50>;
                key-positions = <6 40>;
                bindings = <&sl ADJ>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
    &kp GRAVE   &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T               &kp Y       &kp U       &kp I       &kp O       &kp P       &kp LBKT    &kp RBKT
           &mt LCTRL ESC    &kp A       &kp S       &kp D       &kp F       &kp G               &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
                &kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B               &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp BSPC
                                                    &kp LGUI    &kp SPACE   &kp LALT            &mo TYP     &kp ENTER   &kp RGUI
                        >;
                };

                type_layer {
                        bindings = <
    &trans      &mlock      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5              &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp MINUS    &kp EQUAL 
                &kp CARET   &kp LBKT    &kp RBKT    &kp LBRC    &kp RBRC    &kp PLUS            &kp UNDER   &kp LEFT    &kp UP      &kp RIGHT   &trans      &kp DLLR
                &trans      &kp PIPE    &kp BSLH    &kp LPRN    &kp RPRN    &kp MINUS           &kp EQUAL   &kp SQT     &kp DOWN    &kp P       &trans      &kp DEL
                                                    &trans      &sl FNC     &trans              &trans      &trans      &trans
                        >;
                };

                function_layer {
                        bindings = <
    &trans      &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5              &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12
                &trans      &marr       &trans      &trans      &kp LC(F)   &kp LC(G)           &trans      &trans      &trans      &trans      &trans      &mvbh
                &trans      &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp BRID    &kp BRIU            &trans      &trans      &trans      &trans      &trans      &trans
                                                    &trans      &trans      &trans              &trans      &trans      &trans
                        >;
                };

                adjust_layer {
                        bindings = <
   &reset &bootloader  &none        &none        &none        &none        &none              &none        &none        &none        &none        &none         &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0  &bt BT_CLR
        &out OUT_USB   &out OUT_BLE &none        &none        &none        &none              &none        &none        &none        &none        &none         &none
                                                 &trans       &none        &trans             &trans       &none        &trans
                        >;
                };
        };
};
